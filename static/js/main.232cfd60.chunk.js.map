{"version":3,"sources":["EnhancedTableToolbar.js","EnhancedTableHead.js","Main.js","Header.js","reportWebVitals.js","Favourites.js","index.js","home.js"],"names":["useToolbarStyles","makeStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","palette","type","color","backgroundColor","lighten","text","primary","title","flex","margin","EnhancedTableToolbar","history","selected","numSelected","setSelected","classes","Toolbar","className","clsx","Typography","variant","component","Tooltip","Button","size","startIcon","onClick","localStorage","setItem","JSON","stringify","alert","IconButton","aria-label","headCells","id","numeric","disablePadding","label","EnhancedTableHead","props","order","orderBy","onRequestSort","TableHead","TableRow","TableCell","padding","map","headCell","align","sortDirection","TableSortLabel","active","direction","property","event","visuallyHidden","descendingComparator","a","b","getComparator","stableSort","array","comparator","stabilizedThis","el","index","sort","propTypes","PropTypes","object","isRequired","number","func","onSelectAllClick","oneOf","string","rowCount","useStyles","width","paper","marginBottom","table","minWidth","border","clip","height","overflow","position","top","Main","favouritess","Banks","rows","data","i","bank_name","ifsc","bank_id","district","state","React","useState","setOrder","setOrderBy","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","emptyRows","Math","min","length","favourites","Paper","TableContainer","Table","aria-labelledby","target","checked","newSelecteds","n","name","TableBody","slice","row","isItemSelected","indexOf","labelId","hover","selectedIndex","newSelected","concat","handleClick","role","aria-checked","tabIndex","Checkbox","IFSC","push","inputProps","style","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","value","FormControlLabel","control","Switch","onChange","Header","bankName","searchBank","placeholder","city","searchCity","FormControl","InputLabel","Select","e","MenuItem","FormHelperText","htmlFor","Input","startAdornment","InputAdornment","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Favourites","parse","getItem","FavouriteBanks","filter","ReactDOM","render","path","exact","filteredBanks","setFilteredBanks","allBanks","setAllBanks","setBankName","setCity","useEffect","fetch","res","json","catch","err","console","log","BanksToDisplay","fill","includes","document","getElementById"],"mappings":"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","file":"static/js/main.232cfd60.chunk.js","sourcesContent":["import React from 'react';\r\nimport clsx from 'clsx';\r\nimport Button from '@material-ui/core/Button';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport StarsIcon from '@material-ui/icons/Stars';\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n    root: {\r\n      paddingLeft: theme.spacing(1),\r\n      paddingRight: theme.spacing(1),\r\n    },\r\n    highlight:\r\n      theme.palette.type === 'light'\r\n        ? {\r\n            color: \"#388e3c\",\r\n            backgroundColor: lighten(\"#388e3c\", 0.85),\r\n          }\r\n        : {\r\n            color: theme.palette.text.primary,\r\n            backgroundColor: \"#388e3c\"\r\n          },\r\n    title: {\r\n      flex: '1 1 100%',\r\n    },\r\n    margin: {\r\n      margin: theme.spacing(3),\r\n    }\r\n  }));\r\n  \r\n  const EnhancedTableToolbar = ({history,selected,numSelected,setSelected}) => {\r\n    const classes = useToolbarStyles();\r\n  \r\n  \r\n    return (\r\n      <Toolbar\r\n        className={clsx(classes.root, {\r\n          [classes.highlight]: numSelected > 0,\r\n        })}\r\n      >\r\n        {numSelected > 0 ? (\r\n          <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n            {numSelected} selected\r\n          </Typography>\r\n        ) : ( <>\r\n   \r\n          </>\r\n        )}\r\n  \r\n        {numSelected > 0 ? (\r\n          <Tooltip >\r\n    <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          startIcon={<StarsIcon />}\r\n          onClick = { () => { localStorage.setItem(\"Favourites\" , JSON.stringify(selected) ) \r\n          setSelected([]);\r\n        alert(\"Added to favourites section\")\r\n        }   }\r\n        >\r\n        Add as favourite\r\n        </Button> \r\n          </Tooltip>\r\n        ) : (\r\n          <Tooltip title=\"Filter list\">\r\n            <IconButton aria-label=\"filter list\">\r\n            \r\n            </IconButton>\r\n          </Tooltip>\r\n        )}\r\n      </Toolbar>\r\n    );\r\n  };\r\n\r\n  export default EnhancedTableToolbar;","import React from 'react';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\n\r\n\r\nconst headCells = [\r\n    { id: 'bank_name', numeric: false, disablePadding: false, label: 'Bank' },\r\n    { id: 'ifsc', numeric: true, disablePadding: false, label: 'IFSC' },\r\n    { id: 'bank_id', numeric: true, disablePadding: false, label: 'Bank ID' },\r\n    { id: 'district', numeric: true, disablePadding: false, label: 'District' },\r\n    { id: 'state', numeric: true, disablePadding: false, label: 'State' }\r\n  \r\n  ];\r\n\r\n\r\nfunction EnhancedTableHead(props) {\r\n    const { classes, order, orderBy, onRequestSort } = props;\r\n    const createSortHandler = (property) => (event) => {\r\n      onRequestSort(event, property);\r\n    };\r\n  \r\n    return (\r\n      <TableHead>\r\n        <TableRow>\r\n          <TableCell padding=\"checkbox\">\r\n          \r\n          </TableCell> \r\n          {headCells.map((headCell) => (\r\n            <TableCell\r\n              key={headCell.id}\r\n              align={headCell.numeric ? '' : ''}\r\n              padding={headCell.disablePadding ? '' : ''}\r\n              sortDirection={orderBy === headCell.id ? order : false}\r\n            >\r\n              <TableSortLabel\r\n                active={orderBy === headCell.id}\r\n                direction={orderBy === headCell.id ? order : 'asc'}\r\n                onClick={createSortHandler(headCell.id)}\r\n              >\r\n                {headCell.label}\r\n                {orderBy === headCell.id ? (\r\n                  <span className={classes.visuallyHidden}>\r\n                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                  </span>\r\n                ) : null}\r\n              </TableSortLabel>\r\n            </TableCell>\r\n          ))}\r\n        </TableRow>\r\n      </TableHead>\r\n    );\r\n  }\r\n\r\n  export default EnhancedTableHead;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {  makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport EnhancedTableToolbar from \"./EnhancedTableToolbar\"\r\nimport Switch from '@material-ui/core/Switch';\r\nimport EnhancedTableHead from './EnhancedTableHead'\r\n\r\nfunction createData(bank_name, ifsc, bank_id, district,state) {\r\n  return { bank_name, ifsc, bank_id, district,state };\r\n}\r\n\r\n\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\n\r\n<EnhancedTableHead />\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\n<EnhancedTableToolbar />\r\n\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nvar useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function Main({favouritess,Banks}) {\r\n\r\n let rows = [];\r\n\r\n  const row = Banks.map( (data,i) => {\r\n      rows[i] = (createData(  data.bank_name, data.ifsc , data.bank_id , data.district , data.state ))   \r\n  }  )\r\n\r\n\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  let favourites = [];\r\n  return (\r\n      \r\n    <div className={classes.root}>\r\n     \r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar numSelected={selected.length} setSelected = {setSelected}  selected = {selected} />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.ifsc);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.ifsc  , { Bank :  row.bank_name ,\r\n                         ID : row.bank_id , District : row.district , State  : row.state  }  )}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.ifsc}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        \r\n          \r\n                     { favouritess ? \"\" : <Checkbox\r\n                         onClick = { () => {\r\n                           const IFSC = row.ifsc \r\n                      \r\n                           favourites.push(IFSC);\r\n\r\n                        \r\n                         }  }\r\n                          checked={isItemSelected}\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                        />  }\r\n                      </TableCell>\r\n                      <TableCell >{row.bank_name}</TableCell>\r\n                      <TableCell >{row.ifsc}</TableCell>\r\n                      <TableCell >{row.bank_id}</TableCell>\r\n                      <TableCell >{row.district}</TableCell>\r\n                      <TableCell >{row.state}</TableCell>\r\n\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5,10,50,100, 200, 500]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    \r\n    </div>\r\n  );\r\n}\r\n\r\n","\r\nimport React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport StarsIcon from '@material-ui/icons/Stars';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport {Link} from \"react-router-dom\"\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n    root: {\r\n      paddingLeft: theme.spacing(1),\r\n      paddingRight: theme.spacing(1),\r\n    },\r\n    highlight:\r\n      theme.palette.type === 'light'\r\n        ? {\r\n            color: \"#388e3c\",\r\n            backgroundColor: lighten(\"#388e3c\", 0.85),\r\n          }\r\n        : {\r\n            color: theme.palette.text.primary,\r\n            backgroundColor: \"#388e3c\"\r\n          },\r\n    title: {\r\n      flex: '1 1 100%',\r\n    },\r\n    margin: {\r\n      margin: theme.spacing(3),\r\n    }\r\n  }));\r\n\r\nfunction Header({bankName, searchBank,placeholder, city , searchCity}) {\r\n    const classes = useToolbarStyles();\r\n    return (\r\n        <div>\r\n                <FormControl className={classes.margin} >\r\n        <InputLabel id=\"demo-simple-select-helper-label\">Select City</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-helper-label\"\r\n          id=\"demo-simple-select-helper\"\r\n          value={city}\r\n          onChange={ (e) => searchCity(e)}\r\n        >\r\n          <MenuItem value={\"BHUBANESHWAR\"}>Bhubaneshwar</MenuItem>\r\n          <MenuItem value={\"KERALA\"}>Kerala</MenuItem>\r\n          <MenuItem value={\"GOA\"}>Goa</MenuItem>\r\n          <MenuItem value={\"TIRUPATI\"}>Tirupati</MenuItem>\r\n          <MenuItem value={\"RAMPUR\"}>RAMPUR</MenuItem>\r\n        </Select>\r\n        <FormHelperText>Select city of your bank</FormHelperText>\r\n      </FormControl>\r\n      <FormControl className={classes.margin}>\r\n        <InputLabel htmlFor=\"input-with-icon-adornment\">Search Bank</InputLabel>\r\n        <Input\r\n        value={bankName} onChange={searchBank} placeholder= {placeholder}\r\n          id=\"input-with-icon-adornment\"\r\n          startAdornment={\r\n            <InputAdornment position=\"start\">\r\n              <AccountBalanceIcon />\r\n            </InputAdornment>\r\n            \r\n            \r\n          }\r\n        />\r\n       <FormHelperText>Search bank by its name / ifcs for accurate results</FormHelperText>\r\n        \r\n      </FormControl>\r\n    <Link to = \"/favourites\"  >  <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        size=\"small\"\r\n        className={classes.margin}\r\n        startIcon={<StarsIcon />}\r\n      >\r\n        Favourite Banks\r\n      </Button> </Link>\r\n      \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport { Link } from \"react-router-dom\"\r\nimport Main from \"./Main\"\r\n\r\nfunction Favourites(props) {\r\n    const Banks = JSON.parse(localStorage.getItem(\"Banks\"));\r\n    const Favourites = localStorage.getItem(\"Favourites\")\r\n    const FavouriteBanks = Banks.filter((data, i) => Favourites.indexOf(data.ifsc) !== -1)\r\n\r\n    return (\r\n        <div>\r\n            <br></br>\r\n            <br></br>\r\n\r\n            <Link to=\"/\"  >   <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                size=\"small\"\r\n            >\r\n                Home\r\n      </Button>\r\n            </Link>\r\n\r\n            <h1>Your favourite banks</h1>\r\n\r\n            <Main favouritess={true} Banks={FavouriteBanks} />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Favourites\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Home from \"./home\"\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter,Route,Switch} from \"react-router-dom\"\nimport Favourites from \"./Favourites\"\n\n\nReactDOM.render(\n  <BrowserRouter>\n  <Switch >\n    <Route  path = \"/\" exact component = {Home}  />\n    <Route path = \"/favourites\" exact  component = {Favourites}  />\n    </Switch>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React, { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Main from \"./Main\"\r\nimport Header from \"./Header\"\r\n\r\nexport default  function Home() {\r\n\r\n\r\n  const [filteredBanks, setFilteredBanks] = useState(\"\");\r\n\r\n  const [allBanks, setAllBanks] = useState([]);\r\n\r\n  const [bankName, setBankName] = useState(\"\");\r\n\r\n  const [city, setCity] = useState();\r\n\r\n  const searchBank = (e) => {\r\n\r\n \r\n\r\n    if(!city){\r\n      alert(\"Select city first\")\r\n    }else{\r\n\r\n\r\n    setBankName(e.target.value)\r\n    \r\n    const fill = allBanks.filter((data, i) => {\r\n      if (data.bank_name.includes(e.target.value) || data.ifsc.includes(e.target.value)  ) {\r\n           return data\r\n      } \r\n    })\r\n    setFilteredBanks(fill)\r\n    }\r\n  }\r\n\r\n  const searchCity = (e) => {\r\n    setBankName(\"\")\r\n    setFilteredBanks(\"\")\r\n    setCity(e.target.value);\r\n  \r\n  }\r\n\r\n  useEffect(() => {\r\n    fetch(`https://vast-shore-74260.herokuapp.com/banks?city=${city}`).\r\n    then(res => res.json()).\r\n    then(res => { \r\n      if(res.length > 0){\r\n      localStorage.setItem(\"Banks\" , JSON.stringify(res) )\r\n      }\r\n    setAllBanks(res) \r\n    } ).catch(err => {\r\n      console.log(err)\r\n    })\r\n\r\n  }, [city])\r\n\r\n  const BanksToDisplay = filteredBanks ? filteredBanks : allBanks\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Header \r\n        city={city}\r\n        searchCity={searchCity}\r\n      bankName={bankName} searchBank={searchBank} placeholder=\"Search Bank\"  />\r\n     { BanksToDisplay  ? <Main Banks = {BanksToDisplay}  /> : \"\" }\r\n    \r\n    </div>\r\n  )\r\n}\r\n"],"sourceRoot":""}